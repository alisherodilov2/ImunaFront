   <TabContent activeTab={activeTab} className='p-0'>
                            <TabPane tabId='1'>
                                <div className='row' >

                                    <div className="col-6 mb-1">
                                        <label className="form-label">Familiyasi</label>
                                        <Input type="text" placeholder="Familiyasi"  {...register('first_name')} name='first_name'
                                            error={errors.first_name?.message?.toString() || hasError?.errors?.first_name?.toString()}
                                        />
                                    </div>
                                    <div className="col-6 mb-1">
                                        <label className="form-label">Ismi</label>
                                        <Input type="text" placeholder="Ismi"  {...register('last_name')} name='last_name'
                                            error={errors.last_name?.message?.toString() || hasError?.errors?.last_name?.toString()}
                                        />
                                    </div>
                                    <div className="col-6 mb-1">
                                        <label className="form-label">Tug'ilgan sanasi</label>
                                        <Input type="date" placeholder="Ismi"  {...register('data_birth')} name='data_birth'
                                            onChange={(e: any) => {
                                                let value = e.target.value
                                                setValue('data_birth', value, {
                                                    shouldValidate: true
                                                })
                                                if (value.length > 0 && getValues('phone')?.length == 9) {
                                                    let target = `?data_birth=${value}&phone=${getValues('phone')}`
                                                    if (autocomplateText !== target) {
                                                        setAutocomplateText(target)
                                                        autocomplate(target)
                                                    }


                                                }
                                                else {
                                                    setAutocomplateText('')
                                                }
                                            }}
                                            error={errors.data_birth?.message?.toString() || hasError?.errors?.data_birth?.toString()}
                                        />
                                    </div>
                                    <div className="col-6 mb-1">
                                        <label className="form-label">Telefon raqami</label>
                                        <input type="hidden" {...register('phone')} name='phone' />
                                        <div className="input-group">
                                            <div className="input-group-text">
                                                +998
                                            </div>
                                            <PatternFormat
                                                format="(##) ###-##-##"
                                                mask="_"
                                                disabled={getValues('data_birth')?.length > 0 ? false : true}
                                                value={getValues('phone')}
                                                allowEmptyFormatting
                                                className='form-control'
                                                placeholder="+998 (___) ___-____"
                                                onChange={(e: any) => {
                                                    let value = e.target.value.replace(/[^\d]/g, '');
                                                    console.log(value);

                                                    setValue('phone', value, {
                                                        shouldValidate: true,
                                                    });
                                                    if (value.length == 9) {
                                                        let target = `?phone=${value}&data_birth=${getValues('data_birth')}`
                                                        if (autocomplateText !== target) {
                                                            setAutocomplateText(target)
                                                            autocomplate(target)
                                                        }


                                                    }
                                                    else {
                                                        setAutocomplateText('')
                                                    }
                                                }}
                                            />
                                            {
                                                complateLoading ? <div className="input-group-text">
                                                    <Spinner animation="border" />
                                                </div> : ''
                                            }
                                        </div>
                                        <ErrorInput>
                                            {errors.phone?.message?.toString() || hasError?.errors?.phone?.toString()}
                                        </ErrorInput>

                                    </div>
                                    <div className="col-6 mb-1">
                                        <label className="form-label">jinsi</label>
                                        <div className="d-flex gap-3">
                                            <div className="form-check ">
                                                <input className="form-check-input" type="radio" id="male" {...register('sex')} name='sex' value={'male'} />
                                                <label className="form-check-label" htmlFor="male"> erkak </label>
                                            </div>
                                            <div className="form-check ">
                                                <input className="form-check-input" type="radio" id="female" {...register('sex')} name='sex' value={'female'} />
                                                <label className="form-check-label" htmlFor="female"> ayol </label>
                                            </div>
                                        </div>
                                        <ErrorInput>
                                            {errors.sex?.message?.toString() || hasError?.errors?.sex?.toString()}
                                        </ErrorInput>
                                    </div>
                                    <div className="col-6 mb-1">
                                        <label className="form-label">Fuqoroligi</label>
                                        <div className="d-flex gap-3">
                                            <div className="form-check ">
                                                <input className="form-check-input" type="radio" id="uz" {...register('citizenship')} name='citizenship' value={'uz'} />
                                                <label className="form-check-label" htmlFor="uz"> Uzbek </label>
                                            </div>
                                            <div className="form-check ">
                                                <input className="form-check-input" type="radio" id="chet" {...register('citizenship')} name='citizenship' value={'chet'} />
                                                <label className="form-check-label" htmlFor="chet"> Chet'ellik </label>
                                            </div>
                                        </div>
                                        <ErrorInput>
                                            {errors.citizenship?.message?.toString() || hasError?.errors?.citizenship?.toString()}
                                        </ErrorInput>
                                    </div>
                                    <div className="col-6 mb-1">
                                        <label className="form-label">Yullanma</label>
                                        <Input type="text" placeholder="Ismi"
                                        // {...register('last_name')} name='last_name'
                                        //     error={errors.last_name?.message?.toString() || hasError?.errors?.last_name?.toString()}
                                        />
                                    </div>
                                    <div className="col-6 mb-1">
                                        <label className="form-label">Reklama</label>
                                        <Input type="text" placeholder="Ismi"
                                        //  {...register('last_name')} name='last_name'
                                        //     error={errors.last_name?.message?.toString() || hasError?.errors?.last_name?.toString()}
                                        />
                                    </div>
                                </div>
                            </TabPane>
                            <TabPane tabId="2">
                                <div className="col-12 mb-1">
                                    <label className="form-label">Bo'lim nomi</label>
                                    <input type="hidden" {...register('department_id')} name='department_id' />
                                    <div className="d-flex">
                                        <div className="w-100">

                                            <Select
                                                name='name3'
                                                value={selectData?.department_id}
                                                onChange={(e: any) => {
                                                    setSelectData({
                                                        ...selectData,
                                                        department_id: e
                                                    })


                                                }}
                                                className="basic-multi-select"
                                                classNamePrefix="select"
                                                // value={userBranch}
                                                options={
                                                    [
                                                        {
                                                            value: 0,
                                                            label: 'Barchasi'
                                                        },
                                                        ...dataSelect(departmentData)]
                                                } />
                                        </div>
                                        {/* <button
                                            type="button"
                                            onClick={() => {
                                                setModal2(() => true)
                                            }}
                                            // onFocus={togglePopover}
                                            className="btn btn-icon btn-primary input-group-text">
                                            <span className="tf-icons bx bx-plus" />
                                        </button> */}
                                    </div>
                                    <ErrorInput>
                                        {errors.department_id?.message?.toString() || hasError?.errors?.department_id?.toString()}
                                    </ErrorInput>
                                </div>
                                <div className="col-12 mb-1">
                                    <label className="form-label">Xizmatlar</label>
                                    <div className="d-flex">
                                        <div className="w-100">
                                            <Select
                                                name='name3'
                                                value={selectData?.service_id}
                                                isMulti
                                                onChange={(e: any) => {
                                                    // console.log('select');
                                                    let result = e
                                                    if (+data?.id > 0) {
                                                        if (result?.length == 0) {
                                                            setSelectData({
                                                                ...selectData,
                                                                service_id: [],
                                                                department_id: false,
                                                            })
                                                            let resdata = data?.client_value?.map((item: any) => {
                                                                return {
                                                                    status: 'old',
                                                                    ...item?.service,
                                                                    qty: +item?.qty,
                                                                    pay_price: item?.pay_price,
                                                                    is_active: item?.is_active ?? 0,
                                                                    service_id: item?.service_id,
                                                                    department_id: item?.department_id,

                                                                    id: item?.id,
                                                                    price: item?.price
                                                                }
                                                            })
                                                            console.log('resdata', resdata);
                                                            setClientValue(() => resdata)
                                                        }

                                                        else {
                                                            console.log(e);

                                                            setSelectData({
                                                                ...selectData,
                                                                service_id: result,
                                                                department_id: false,
                                                            })
                                                            setClientValue(() => [
                                                                ...data?.client_value?.map((item: any) => {
                                                                    return {
                                                                        status: 'old',
                                                                        ...item?.service,
                                                                        qty: +item?.qty,
                                                                        pay_price: item?.pay_price ?? 0,
                                                                        is_active: item?.is_active ?? 0,
                                                                        service_id: item?.service_id,
                                                                        department_id: item?.department_id,
                                                                        id: item?.id,
                                                                        price: item?.price
                                                                    }
                                                                }),
                                                                ...result
                                                                    .map((item: any) => {
                                                                        return {
                                                                            ...item?.data,
                                                                            pay_price: item?.pay_price ?? 0,
                                                                            is_active: item?.is_active ?? 0,
                                                                            id: nanoid(),
                                                                            service_id: item?.value,
                                                                            department_id: item?.data?.department?.id,
                                                                        }
                                                                    }),
                                                            ])
                                                        }
                                                    } else {
                                                        setSelectData({
                                                            ...selectData,
                                                            service_id: result,
                                                            department_id: false,
                                                        })
                                                        setClientValue(() => [
                                                            ...result
                                                                ?.map((item: any) => {
                                                                    return {
                                                                        ...item?.data,
                                                                        pay_price: item?.pay_price ?? 0,
                                                                        id: nanoid(),
                                                                        is_active: item?.is_active ?? 0,
                                                                        service_id: item?.value,
                                                                        department_id: item?.data?.department?.id,
                                                                    }
                                                                }),
                                                        ])
                                                    }

                                                }}
                                                className="basic-multi-select"
                                                classNamePrefix="select"
                                                // value={userBranch}
                                                options={
                                                    [

                                                        ...dataSelect(serviceData
                                                            ?.filter((item: any) => {
                                                                return +data?.id > 0 ? (data?.client_value?.find((res: any) => res?.service.id == item?.id) ? false : true) : true
                                                            })
                                                            .filter((item: any) => selectData?.department_id?.value > 0 ? item.department.id == selectData?.department_id?.value : true))]
                                                } />
                                        </div>
                                        {/* <button
                                            type="button"
                                            onClick={() => {
                                                setModal2(() => true)
                                            }}
                                            // onFocus={togglePopover}
                                            className="btn btn-icon btn-primary input-group-text">
                                            <span className="tf-icons bx bx-plus" />
                                        </button> */}
                                    </div>
                                    <ErrorInput>
                                        {errors.department_id?.message?.toString() || hasError?.errors?.department_id?.toString()}
                                    </ErrorInput>
                                </div>
                                <div style={{
                                    maxHeight: `${window.innerHeight / 2.2}px`,
                                    overflow: 'auto'
                                }}>
                                    <Table
                                        //  exportFile={true}
                                        //  importFile={true}
                                        isSuccess={true}
                                        isLoading={false}
                                        // errorMassage={{}}
                                        top={100}
                                        scrollRole={true}
                                        // editRole=
                                        // localEdit={false}
                                        localDelete={true}
                                        localFunction={true}
                                        // extraButton={(item: any) => {
                                        //     return <div className='d-flex gap-1'>
                                        //         <div className="btn-group" role="group" aria-label="Basic example">
                                        //             <button type="button" className="btn btn-danger btn-sm"
                                        //                 onClick={() => {
                                        //                     setClientValue(() => {
                                        //                         return clinetValue?.map((res: any) => {
                                        //                             if (res?.id == item?.id) {
                                        //                                 return {
                                        //                                     ...res,
                                        //                                     qty: res?.qty > 1 ? res?.qty - 1 : 1
                                        //                                 }
                                        //                             }
                                        //                             return res
                                        //                         })
                                        //                     })
                                        //                 }}

                                        //             >-</button>
                                        //             <button type="button" className="btn  btn-sm">{
                                        //                 item?.qty ?? 1
                                        //             }</button>
                                        //             <button type="button"
                                        //                 //  disabled={item?.status == 'old' ? true : false}
                                        //                 className="btn btn-success btn-sm"
                                        //                 onClick={() => {
                                        //                     setClientValue(() => {
                                        //                         return clinetValue?.map((res: any) => {
                                        //                             if (res?.id == item?.id) {
                                        //                                 return {
                                        //                                     ...res,
                                        //                                     qty: (res?.qty ?? 1) + 1
                                        //                                 }
                                        //                             }
                                        //                             return res
                                        //                         })
                                        //                     })

                                        //                 }}


                                        //             >+</button>
                                        //         </div>
                                        //         <button className=" btn btn-sm btn-danger"
                                        //             type='button'
                                        //             disabled={data?.id > 0 ? (data?.client_value?.find((res: any) => res?.service_id == item?.service_id) ? true : false) : false}
                                        //             onClick={() => {
                                        //                 console.log(item);

                                        //                 Swal.fire({
                                        //                     title: "Ma'lumotni o'chirasizmi?",
                                        //                     showDenyButton: true,
                                        //                     showCancelButton: true,
                                        //                     confirmButtonText: 'Ha',
                                        //                     denyButtonText: `Yo'q`,
                                        //                 }).then((result: any) => {
                                        //                     if (result.isConfirmed) {
                                        //                         setClientValue(() => clinetValue?.filter((res: any) => res.id != item.id))

                                        //                         setSelectData({
                                        //                             ...selectData,
                                        //                             service_id: selectData.service_id.filter((res: any) => res.value != item.id)
                                        //                         })
                                        //                         Swal.fire({
                                        //                             position: 'top-end',
                                        //                             icon: 'success',
                                        //                             title: "Malumot o'chirildi",
                                        //                             showConfirmButton: false,
                                        //                             timer: 2500
                                        //                         })
                                        //                     }
                                        //                 })
                                        //             }}

                                        //         >
                                        //             <MdDeleteForever />
                                        //         </button>
                                        //     </div>
                                        // }}
                                        // extraButtonRole={true}
                                        // deleteLocalFunction={
                                        //     (id: any, item: any) => {
                                        //         setClientValue(() => clinetValue?.filter((res: any) => res.id != id))

                                        //         setSelectData({
                                        //             ...selectData,
                                        //             service_id: selectData.service_id.filter((res: any) => res.value != id)
                                        //         })

                                        //     }
                                        // }
                                        // deleteRole={true}
                                        extraKeys={["department_",
                                            //  "servicetype_",
                                            'count_',
                                            "price_",
                                            "who_",
                                        ]}
                                        columns={[
                                            {
                                                title: '№',
                                                key: 'id',
                                                renderItem: (value: any, target: any) => {
                                                    return <td key={target.index} className={` p-1  ${+data?.id ? (+data?.is_pay ? (+target?.is_active ? (target?.qty * target?.price - target?.pay_price == 0 ? 'bg-success text-white' : 'bg-warning text-white') : (target?.status == 'old' ? 'bg-danger text-white' : 'bg-warning text-white')) : (target?.status == 'old' ? 'bg-warning text-white' : 'bg-warning text-white')) : ''}  h-100 `}>
                                                        <span>
                                                            {target.index + 1}

                                                        </span>
                                                    </td>

                                                },
                                            },
                                            {
                                                title: "Xizmat ",
                                                key: 'department_',
                                                render: (value: any, data: any) => {

                                                    return <button className='btn btn-sm'

                                                    >
                                                        {value?.name}
                                                    </button>
                                                }
                                            },
                                            {
                                                title: "Xizmat ",
                                                key: 'count_',
                                                render: (item: any) => {

                                                    return <div className='d-flex gap-1'>
                                                        <div className="btn-group" role="group" aria-label="Basic example">
                                                            <button type="button" className="btn btn-danger btn-sm"
                                                                onClick={() => {
                                                                    setClientValue(() => {
                                                                        return clinetValue?.map((res: any) => {
                                                                            if (res?.id == item?.id) {
                                                                                return {
                                                                                    ...res,
                                                                                    qty: res?.qty > 1 ? res?.qty - 1 : 1
                                                                                }
                                                                            }
                                                                            return res
                                                                        })
                                                                    })
                                                                }}

                                                            >-</button>
                                                            <button type="button" className="btn  btn-sm">{
                                                                item?.qty ?? 1
                                                            }</button>
                                                            <button type="button"
                                                                //  disabled={item?.status == 'old' ? true : false}
                                                                className="btn btn-success btn-sm"
                                                                onClick={() => {
                                                                    setClientValue(() => {
                                                                        return clinetValue?.map((res: any) => {
                                                                            if (res?.id == item?.id) {
                                                                                return {
                                                                                    ...res,
                                                                                    qty: (res?.qty ?? 1) + 1
                                                                                }
                                                                            }
                                                                            return res
                                                                        })
                                                                    })

                                                                }}


                                                            >+</button>
                                                        </div>
                                                        <button className=" btn btn-sm btn-danger"
                                                            type='button'
                                                            disabled={data?.id > 0 ? (data?.client_value?.find((res: any) => res?.service_id == item?.service_id) ? true : false) : false}
                                                            onClick={() => {
                                                                console.log(item);

                                                                Swal.fire({
                                                                    title: "Ma'lumotni o'chirasizmi?",
                                                                    showDenyButton: true,
                                                                    showCancelButton: true,
                                                                    confirmButtonText: 'Ha',
                                                                    denyButtonText: `Yo'q`,
                                                                }).then((result: any) => {
                                                                    if (result.isConfirmed) {
                                                                        setClientValue(() => clinetValue?.filter((res: any) => res.id != item.id))

                                                                        setSelectData({
                                                                            ...selectData,
                                                                            service_id: selectData.service_id.filter((res: any) => res.value != item.id)
                                                                        })
                                                                        Swal.fire({
                                                                            position: 'top-end',
                                                                            icon: 'success',
                                                                            title: "Malumot o'chirildi",
                                                                            showConfirmButton: false,
                                                                            timer: 2500
                                                                        })
                                                                    }
                                                                })
                                                            }}

                                                        >
                                                            <MdDeleteForever />
                                                        </button>
                                                    </div>
                                                }
                                            },
                                            // {
                                            //     title: 'Xizmat turi',
                                            //     key: 'servicetype_',
                                            //     render: (value: any, data: any) => {
                                            //         return value?.servicetype?.type
                                            //     }
                                            // },

                                            {
                                                title: 'Narxi',
                                                key: 'price_',
                                                render: (value: any, data: any) => {
                                                    return <NumericFormat displayType="text"
                                                        thousandSeparator
                                                        decimalScale={2}
                                                        value={value?.price ?? 0} />
                                                }
                                            },
                                            {
                                                title: 'Kim tomonidan',
                                                key: 'who_',
                                                render: (value: any, data: any) => {
                                                    return `Qabulxona: ${masulRegUchunFullName(user)}`
                                                }
                                            },
                                        ]}
                                        dataSource={
                                            clinetValue
                                        }
                                    />
                                </div>
                            </TabPane>
                        </TabContent>